version:  "3.7"

volumes:
  app:
  app-nginx:
  mysql-data:
  redis-data:
  mongodb-data:
  postgres-data:

services:
  mysql:
    image: mysql:8
    restart: on-failure
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: recoventry
    ports:
      - 33060:3306
    #    command: sleep 9999
    command: mysqld --default-authentication-plugin=mysql_native_password --init-file /data/application/init.sql
    volumes:
      - ./docker/mysql/init.sql:/data/application/init.sql
      - mysql-data:/var/lib/mysql

  postgres:
    image: postgres
    restart: on-failure
    environment:
      POSTGRES_PASSWORD: root
      POSTGRES_DB: recoventry
    ports:
      - 54320:5432
    volumes:
      - postgres-data:/var/lib/postgresql

  nginx:
    image: nginx:1.19.4-alpine
    restart: on-failure
    volumes:
      - app-nginx:/var/www/app
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
      - ./docker/certs:/etc/nginx/certs:ro
    ports:
      - '80:80'
      - '443:443'
    depends_on:
      - php

  php:
    build:
      context: .
      dockerfile: docker/php/Dockerfile
    volumes:
      #      - docker/php/uploads.ini:/usr/local/etc/php/conf.d/uploads.ini
      #      - docker/php/testing.ini:/usr/local/etc/php/conf.d/testing.ini
      - app:/var/www/app
    #      - ./docker/supervisor/supervisord.conf:/etc/supervisor/supervisord.conf:ro
    restart: on-failure
    depends_on:
      - mysql
      - postgres
      - redis

  mailhog:
    image: mailhog/mailhog
    restart: on-failure
    ports:
      - '8025:8025'

  redis:
    image: redis
    restart: on-failure
    ports:
      - 6379:6379
    volumes:
      - redis-data:/data

  mongodb:
    image: mongo:latest
    restart: on-failure
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: root
    ports:
      - 27017:27017
    volumes:
      - mongodb-data:/data/db

x-mutagen:
  sync:
    defaults:
      mode: "two-way-resolved"
      ignore:
        vcs: true

    app:
      alpha: "./app"
      beta: "volume://app"
      ignore:
        paths:
          - ".git"
      configurationBeta:
        permissions:
          defaultOwner: "id:33"
          defaultGroup: "id:33"
          defaultFileMode: 0666
          defaultDirectoryMode: 0775

    app-nginx:
      alpha: "./app/public"
      beta: "volume://app-nginx"
      configurationBeta:
        permissions:
          defaultFileMode: 0666
          defaultDirectoryMode: 0775

    mysql-data:
      alpha: "./docker/volumes/mysql-data"
      beta: "volume://mysql-data"
      configurationBeta:
        permissions:
          defaultOwner: "id:999"
          defaultGroup: "id:999"
          defaultFileMode: 0666
          defaultDirectoryMode: 0775

    postgres-data:
      alpha: "./docker/volumes/postgres-data"
      beta: "volume://postgres-data"

    mongodb-data:
      alpha: "./docker/volumes/mongodb-data"
      beta: "volume://mongodb-data"
      configurationBeta:
        permissions:
          defaultOwner: "id:999"
          defaultGroup: "id:999"
          defaultFileMode: 0600
          defaultDirectoryMode: 0700

    redis-data:
      alpha: "./docker/volumes/redis-data"
      beta: "volume://redis-data"
